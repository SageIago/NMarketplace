/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RankingsImport } from './routes/rankings'
import { Route as MarketplaceImport } from './routes/marketplace'
import { Route as MarketImport } from './routes/market'
import { Route as ConnectWalletImport } from './routes/connect-wallet'
import { Route as IndexImport } from './routes/index'
import { Route as MarketIndexImport } from './routes/market.index'
import { Route as MarketViewImport } from './routes/market.view'
import { Route as MarketPriceImport } from './routes/market.price'
import { Route as MarketMintImport } from './routes/market.mint'
import { Route as MarketCreateImport } from './routes/market.create'

// Create/Update Routes

const RankingsRoute = RankingsImport.update({
  id: '/rankings',
  path: '/rankings',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceRoute = MarketplaceImport.update({
  id: '/marketplace',
  path: '/marketplace',
  getParentRoute: () => rootRoute,
} as any)

const MarketRoute = MarketImport.update({
  id: '/market',
  path: '/market',
  getParentRoute: () => rootRoute,
} as any)

const ConnectWalletRoute = ConnectWalletImport.update({
  id: '/connect-wallet',
  path: '/connect-wallet',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MarketIndexRoute = MarketIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MarketRoute,
} as any)

const MarketViewRoute = MarketViewImport.update({
  id: '/view',
  path: '/view',
  getParentRoute: () => MarketRoute,
} as any)

const MarketPriceRoute = MarketPriceImport.update({
  id: '/price',
  path: '/price',
  getParentRoute: () => MarketRoute,
} as any)

const MarketMintRoute = MarketMintImport.update({
  id: '/mint',
  path: '/mint',
  getParentRoute: () => MarketRoute,
} as any)

const MarketCreateRoute = MarketCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => MarketRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/connect-wallet': {
      id: '/connect-wallet'
      path: '/connect-wallet'
      fullPath: '/connect-wallet'
      preLoaderRoute: typeof ConnectWalletImport
      parentRoute: typeof rootRoute
    }
    '/market': {
      id: '/market'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketImport
      parentRoute: typeof rootRoute
    }
    '/marketplace': {
      id: '/marketplace'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceImport
      parentRoute: typeof rootRoute
    }
    '/rankings': {
      id: '/rankings'
      path: '/rankings'
      fullPath: '/rankings'
      preLoaderRoute: typeof RankingsImport
      parentRoute: typeof rootRoute
    }
    '/market/create': {
      id: '/market/create'
      path: '/create'
      fullPath: '/market/create'
      preLoaderRoute: typeof MarketCreateImport
      parentRoute: typeof MarketImport
    }
    '/market/mint': {
      id: '/market/mint'
      path: '/mint'
      fullPath: '/market/mint'
      preLoaderRoute: typeof MarketMintImport
      parentRoute: typeof MarketImport
    }
    '/market/price': {
      id: '/market/price'
      path: '/price'
      fullPath: '/market/price'
      preLoaderRoute: typeof MarketPriceImport
      parentRoute: typeof MarketImport
    }
    '/market/view': {
      id: '/market/view'
      path: '/view'
      fullPath: '/market/view'
      preLoaderRoute: typeof MarketViewImport
      parentRoute: typeof MarketImport
    }
    '/market/': {
      id: '/market/'
      path: '/'
      fullPath: '/market/'
      preLoaderRoute: typeof MarketIndexImport
      parentRoute: typeof MarketImport
    }
  }
}

// Create and export the route tree

interface MarketRouteChildren {
  MarketCreateRoute: typeof MarketCreateRoute
  MarketMintRoute: typeof MarketMintRoute
  MarketPriceRoute: typeof MarketPriceRoute
  MarketViewRoute: typeof MarketViewRoute
  MarketIndexRoute: typeof MarketIndexRoute
}

const MarketRouteChildren: MarketRouteChildren = {
  MarketCreateRoute: MarketCreateRoute,
  MarketMintRoute: MarketMintRoute,
  MarketPriceRoute: MarketPriceRoute,
  MarketViewRoute: MarketViewRoute,
  MarketIndexRoute: MarketIndexRoute,
}

const MarketRouteWithChildren =
  MarketRoute._addFileChildren(MarketRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/connect-wallet': typeof ConnectWalletRoute
  '/market': typeof MarketRouteWithChildren
  '/marketplace': typeof MarketplaceRoute
  '/rankings': typeof RankingsRoute
  '/market/create': typeof MarketCreateRoute
  '/market/mint': typeof MarketMintRoute
  '/market/price': typeof MarketPriceRoute
  '/market/view': typeof MarketViewRoute
  '/market/': typeof MarketIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/connect-wallet': typeof ConnectWalletRoute
  '/marketplace': typeof MarketplaceRoute
  '/rankings': typeof RankingsRoute
  '/market/create': typeof MarketCreateRoute
  '/market/mint': typeof MarketMintRoute
  '/market/price': typeof MarketPriceRoute
  '/market/view': typeof MarketViewRoute
  '/market': typeof MarketIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/connect-wallet': typeof ConnectWalletRoute
  '/market': typeof MarketRouteWithChildren
  '/marketplace': typeof MarketplaceRoute
  '/rankings': typeof RankingsRoute
  '/market/create': typeof MarketCreateRoute
  '/market/mint': typeof MarketMintRoute
  '/market/price': typeof MarketPriceRoute
  '/market/view': typeof MarketViewRoute
  '/market/': typeof MarketIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/connect-wallet'
    | '/market'
    | '/marketplace'
    | '/rankings'
    | '/market/create'
    | '/market/mint'
    | '/market/price'
    | '/market/view'
    | '/market/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/connect-wallet'
    | '/marketplace'
    | '/rankings'
    | '/market/create'
    | '/market/mint'
    | '/market/price'
    | '/market/view'
    | '/market'
  id:
    | '__root__'
    | '/'
    | '/connect-wallet'
    | '/market'
    | '/marketplace'
    | '/rankings'
    | '/market/create'
    | '/market/mint'
    | '/market/price'
    | '/market/view'
    | '/market/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ConnectWalletRoute: typeof ConnectWalletRoute
  MarketRoute: typeof MarketRouteWithChildren
  MarketplaceRoute: typeof MarketplaceRoute
  RankingsRoute: typeof RankingsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ConnectWalletRoute: ConnectWalletRoute,
  MarketRoute: MarketRouteWithChildren,
  MarketplaceRoute: MarketplaceRoute,
  RankingsRoute: RankingsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/connect-wallet",
        "/market",
        "/marketplace",
        "/rankings"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/connect-wallet": {
      "filePath": "connect-wallet.tsx"
    },
    "/market": {
      "filePath": "market.tsx",
      "children": [
        "/market/create",
        "/market/mint",
        "/market/price",
        "/market/view",
        "/market/"
      ]
    },
    "/marketplace": {
      "filePath": "marketplace.tsx"
    },
    "/rankings": {
      "filePath": "rankings.tsx"
    },
    "/market/create": {
      "filePath": "market.create.tsx",
      "parent": "/market"
    },
    "/market/mint": {
      "filePath": "market.mint.tsx",
      "parent": "/market"
    },
    "/market/price": {
      "filePath": "market.price.tsx",
      "parent": "/market"
    },
    "/market/view": {
      "filePath": "market.view.tsx",
      "parent": "/market"
    },
    "/market/": {
      "filePath": "market.index.tsx",
      "parent": "/market"
    }
  }
}
ROUTE_MANIFEST_END */
